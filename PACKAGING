Notice to make release tarballs from GIT
----------------------------------------

1/  Release announcements can be send to kde-i18n-docs if internationalized strings are frozen.
    The earlier is better.

2/  Commit last changes from source code to GIT. The code MUST compile in all cases.

3/  Update the release info in top of core/CMakeLists.txt and commit it to GIT.

4/  Update ChangeLog file using git2cl script from root directory.
    Extract all contents and append only new lines to ChangeLog file since the last release done previously.
    Register the new release info on to of file including release date.
    Commit to GIT.

5/  Update NEWS file. If ChangeLog is a dry historical record of development,
    NEWS should focus on the improvements and changes, summarize everything since
    last major release. Look in bugzilla for closed file summaries.
    Commit to GIT.

    Note: after a stable release, the NEWS file is moved from the root directory to the project sub-directory
    with the release IDs as file-name suffix. The NEWS file from the root directory is cleaned for the next release.

6/  Tag Git vith the release version in this format: vX.Y.Z-suffix.
    Use these commands:

       git tag -a vX.Y.Z-suffix -m "Create version X.Y.Z-suffix"
       git push origin vX.Y.Z-suffix

    Where X is major version, Y minor version, and Z the patch version.
    The optional suffix is to indicate a non final release, as "-beta1" for ex.
    Look with "git tag" command for exiting tags in git.
    These git tag will be used to make tarball and all bundles.

7/  Run the bootstrap.tarball script to release digiKam source tarball. This will include all translations
    files and the documentation. The script compile all translations files to see if nothing is broken.
    At end, if all is fine, the tarball properties must be displayed.
    3 files are generated:

       Source code tarball compressed as tar.xz.
       The archive signature done with gpg.
       The checksums of files.

8/  Upload tarball and signature to the pre-release files repository available at url:

    ssh://digikam@milonia.kde.org/srv/archives/files/digikam/

    Note that you will need a valid developer account with ssh keys).
    Post a message on digikam-users@kde.org mailing list to have a feedback
    from packagers before posting an official release announcement.

9/  Upload tarball and signature to temporary FTP server at url

    ftp://upload.kde.org/incoming for the final publication.

    Create system admin task to publish the file officialy on download servers with url

    https://phabricator.kde.org/maniphest/task/edit/form/2/

    Don't forget to join all file sha256 checksums generated in file sha256_release.sum.

10/ Create bundles files with signatures for Linux, MacOS, and Windows. See README.BUNDLES for details.
    Use same worflow than source tarball.

11/ Create a release announcement page on digikam.org web site.

    Web-site is hosted in a dedicated release repository: https://cgit.kde.org/websites/digikam-org.git/
    Website repository use a staging branch to review changes before to post contents officialy.
    See this README file for details: https://cgit.kde.org/websites/digikam-org.git/tree/README
    The release announcement can use MarkDown format and are located to "news" directory.

    Don't forget to patch default download links with new stable releases files in data/release.yml.

12/ Perform an official release announcement to these mailing-lists:

    digikam-users@kde.org
    digikam-devel@kde.org
    kde-announce@kde.org

    Title: digiKam X.Y.Z-suffix is released

    Dear all digiKam fans and users,

    The digiKam development team is proud to release digiKam
    X.Y.Z-suffix. For more details, see announcement on
    digikam.org:

    https://www.digikam.org/news/date-X.Y.Z-suffix_release_announcement/

    Best
    digiKam team

---------------------------------------------------
